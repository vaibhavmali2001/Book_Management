package com.app.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.app.dto.BookDto;
import com.app.dto.BuyBook;
import com.app.entity.Book;
import com.app.entity.User;
import com.app.repo.BookRepo;
import com.app.repo.UserRepo;

import jakarta.transaction.Transactional;

@Service
@Transactional
public class BookServiceImpl implements BookService{
	
	@Autowired
	private BookRepo bookRepo;
	
	@Autowired
	private UserRepo userRepo;

	@Override
	public String newBook(BookDto bookDto) {
		Book book =new Book(bookDto.getBookId(),
							bookDto.getBookName(),
							bookDto.getBookAuthor(),
							bookDto.getBookPrice(),
							bookDto.getDescription(),
							bookDto.getBookImage());
		bookRepo.save(book);
		return "Book Added";
	}

	@Override
	public List<Book> fetchAllBooks() {
		return bookRepo.findAll();
	}

	@Override
	public Book fetchByName(String bookName) {
		return bookRepo.findByBookName(bookName);
	}

	@Override
	public String removebook(int bookId) {
		 bookRepo.deleteBybookId(bookId);
		 return "Deleted successfully";
	}

	@Override
	public Book fetchById(int bookId) {
		return bookRepo.findByBookId(bookId);
	}

	@Override
	public boolean updateBook(int bookId, Book book) {
		Book existingBook=bookRepo.findByBookId(bookId);
		if(existingBook!=null) {
			existingBook.setBookName(book.getBookName());
			existingBook.setBookAuthor(book.getBookAuthor());
			existingBook.setBookPrice(book.getBookPrice());
			existingBook.setDescription(book.getDescription());
			existingBook.setBookImage(book.getBookImage());
			bookRepo.save(existingBook);
			return true;
		}
		return false;
	}

	@Override
	public String getBook(BuyBook buyBook) {
		Book book=bookRepo.findByBookId(buyBook.getBookId());
		User user=userRepo.findById(buyBook.getUserId()).orElseThrow();
		if(book!=null&&user!=null) {
			book.setUser(user);
			return "Success";
		}
		else {
			return "failed";
		}
		
	}
	
}
